<!-- Assume this is being launched in the vehicle namespace (e.g. uav1) -->

<launch>
    <arg name="vehicle_namespace"       default="uav1" />
	<arg name="unity_sim" 				default="false" />

  	<arg name="max_cameras" 			default="1" />
    <arg name="use_stereo"  			default="false" />
    <arg name="init_window_time"  		default="0.75" />
    <arg name="init_imu_thresh"   		default="1.0" />

	<!-- these should be relative to the vehicle namespace (e.g. /uav1/) -->
    <arg name="topic_imu" 				default="IMU" />
    <arg name="topic_camera0" 			default="camera/image" />
    
    <arg name="set_vision_px4_params"   default="false" />
    
    <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg vehicle_namespace)_odom2global"
        args="0 0 0 0 0 0 1
        $(arg vehicle_namespace)/odom
        global" />      

    <!-- publish imu frame if running in unity -->
    <node
    	if="$(arg unity_sim)"
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="$(arg vehicle_namespace)_imu2IMU"
        args="0 0 0 0 0 0 1
        $(arg vehicle_namespace)/IMU
        imu" />

    <!-- Load PX4 params for processing vision data -->
    <include 
        if="$(arg set_vision_px4_params)"
        file="$(find launch_files)/flight/load_px4_params.launch">
        <arg name="px4_param_args" value="$(find launch_files)/px4_params/ekf2_use_vision.yaml"/>
    </include>

    <node name="open_vins" pkg="ov_msckf" type="run_subscribe_msckf" output="screen">
        
        <!-- bag topics -->
        <param name="topic_imu"      type="string" value="/$(arg vehicle_namespace)/$(arg topic_imu)" />
        <param name="topic_camera0"  type="string" value="/$(arg vehicle_namespace)/$(arg topic_camera0)" />
            
          <!-- world/filter parameters -->
               <!-- world/filter parameters -->
        <param name="use_fej"                		type="bool"   value="true" />
        <param name="use_imuavg"             		type="bool"   value="true" />
        <param name="use_rk4int"             		type="bool"   value="true" />
        <param name="use_stereo"             		type="bool"   value="$(arg use_stereo)" />
        <param name="publish_global_to_imu_tf" 		type="bool"   value="false" />
        <param name="calib_cam_extrinsics"   		type="bool"   value="true" />
        <param name="calib_cam_intrinsics"   		type="bool"   value="true" />
        <param name="calib_cam_timeoffset"   		type="bool"   value="true" />
        <param name="calib_camimu_dt"        		type="double" value="0.0" />
        <param name="max_clones"             		type="int"    value="11" />
        <param name="max_slam"               		type="int"    value="75" />
        <param name="max_slam_in_update"     		type="int"    value="25" /> <!-- 25 seems to work well -->
        <param name="max_msckf_in_update"    		type="int"    value="999" />
        <param name="max_cameras"            		type="int"    value="$(arg max_cameras)" />
        <param name="dt_slam_delay"          		type="double" value="3" />
        <param name="init_window_time"       		type="double" value="$(arg init_window_time)" />
        <param name="init_imu_thresh"        		type="double" value="$(arg init_imu_thresh)" />
        <rosparam param="gravity">[0.0,0.0,9.81]</rosparam>
        <param name="feat_rep_msckf"         		type="string" value="GLOBAL_3D" />
        <param name="feat_rep_slam"          		type="string" value="ANCHORED_FULL_INVERSE_DEPTH" />
        <param name="feat_rep_aruco"         		type="string" value="ANCHORED_FULL_INVERSE_DEPTH" />

        <!-- tracker/extractor properties -->
        <param name="use_klt"          				type="bool"   value="true" />
        <param name="num_pts"          				type="int"    value="150" />
        <param name="fast_threshold"   				type="int"    value="15" />
        <param name="grid_x"           				type="int"    value="5" />
        <param name="grid_y"           				type="int"    value="3" />
        <param name="min_px_dist"      				type="int"    value="10" />
        <param name="knn_ratio"        				type="double" value="0.70" />

        <!-- aruco tag/mapping properties -->
        <param name="use_aruco"        				type="bool"   value="false" />
        <param name="num_aruco"        				type="int"    value="1024" />
        <param name="downsize_aruco"   				type="bool"   value="true" />

        <!-- sensor noise values / update -->
        <param name="up_msckf_sigma_px"            type="double"   value="1" />
        <param name="up_msckf_chi2_multipler"      type="double"   value="1" />
        <param name="up_slam_sigma_px"             type="double"   value="1" />
        <param name="up_slam_chi2_multipler"       type="double"   value="1" />
        <param name="up_aruco_sigma_px"            type="double"   value="1" />
        <param name="up_aruco_chi2_multipler"      type="double"   value="1" />
        <param name="gyroscope_noise_density"      type="double"   value="1.6968e-04" />
        <param name="gyroscope_random_walk"        type="double"   value="1.9393e-05" />
        <param name="accelerometer_noise_density"  type="double"   value="2.0000e-3" />
        <param name="accelerometer_random_walk"    type="double"   value="3.0000e-3" />
        
        <!-- camera intrinsics -->
	    <rosparam param="cam0_wh">[640, 480]</rosparam>
        <param name="cam0_is_fisheye" type="bool" value="false" />
        <param name="cam1_is_fisheye" type="bool" value="false" />
        <rosparam param="cam0_k">[260.998053, 260.998053, 320, 240]</rosparam>
        <rosparam param="cam0_d">[0.0,0.0,0.0,0.0]</rosparam>
        

      
      
      
      
     
    
   
  
 

        
        <!-- camera extrinsics -->
                   <!-- camera extrinsics -->
        <rosparam param="T_C0toI">
        [
         0.0,  0.0, 1.0, 0.3,
        -1.0,  0.0, 0.0, 0.0,
         0.0, -1.0, 0.0, 0.0,
         0.0,  0.0, 0.0, 1.0
        ]
        </rosparam>
    </node>
</launch>
